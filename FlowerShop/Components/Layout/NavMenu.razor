@using System.Security.Claims
@using FlowerShop.Core
@using FlowerShop.Data
@using Microsoft.EntityFrameworkCore
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IHttpContextAccessor HttpContextAccessor
@inject UserDbContext _context

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">FlowerShop</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Домашняя страница
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/catalog" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Каталог
            </NavLink>
        </div>

        @if (User != null)
        {
            if (Role == "admin")
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/admin" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Админ панель
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    private User User;
    private string Role;
    
    protected override async void OnInitialized()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            User = await _context.Users.FirstOrDefaultAsync(e => e.Email == HttpContextAccessor.HttpContext.User.Identity.Name);

            if (user.Identity.IsAuthenticated)
            {
                Role = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
            }
        }
    }
}